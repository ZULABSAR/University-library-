/******** Creat Table Code ********/

DROP TABLE LIBRARY_MEMBER;  
DROP TABLE MEMBER_TYPE;  
DROP TABLE ITEM;     
DROP TABLE COPY;     
DROP TABLE LOAN;    
DROP TABLE LOAN_ARCHIVE;   
DROP TABLE RESERVATION;
DROP TABLE FINE;

DROP VIEW CATALOGUE;
DROP VIEW LOAN_INFORMATION;
DROP VIEW RESERVATION_INFORMATION;

CREATE TABLE LIBRARY_MEMBER     
    (MEMBER_ID NUMBER(4) NOT NULL,       
    FIRSTNAME VARCHAR2(20),      
    LASTNAME VARCHAR2(20),      
    EMAIL VARCHAR2(40),      
    MEMBER_TYPE VARCHAR2(7),   
    MEMBER_STATUS VARCHAR2(10)/*ACTIVE,SUSPEND,MAX BORROW*/);  
 
INSERT INTO LIBRARY_MEMBER VALUES (1001,'Lisa','Jordan','LisaKJordan@queenmary.ac.uk','Student',NULL);
INSERT INTO LIBRARY_MEMBER VALUES (1002,'Allen','Hodges','AllenHHodges@queenmary.ac.uk','Student',NULL);
INSERT INTO LIBRARY_MEMBER VALUES (1003,'Raymond','Cable','RaymondSCable@queenmary.ac.uk','Student',NULL);
INSERT INTO LIBRARY_MEMBER VALUES (1004,'Maria','Jenkins','MariaRJenkins@queenmary.ac.uk','Staff',NULL);
INSERT INTO LIBRARY_MEMBER VALUES (1005,'Sarah','Dell','SarahCDell@queenmary.ac.uk','Staff',NULL);
INSERT INTO LIBRARY_MEMBER VALUES (1006,'Ila','Pernell','IlaPPernell@queenmary.ac.uk','Staff',NULL);

CREATE TABLE MEMBER_TYPE  
    (TYPE VARCHAR2(10),  
    QUANTITY NUMBER(2));
    
INSERT INTO MEMBER_TYPE VALUES ('Student',5);
INSERT INTO MEMBER_TYPE VALUES ('Staff',10);

CREATE TABLE ITEM     
    (RSC_ID NUMBER(6) NOT NULL,  
    FLOOR VARCHAR2(3),   
    SHELF VARCHAR2(3),   
    CODE VARCHAR2(3),   
    RESOURCE_NAME VARCHAR2(100),   
    YEAR NUMBER(4),    
    CREATOR VARCHAR2(50),   
    DAYS_ALLOWED NUMBER(2),   
    TYPE VARCHAR2(5),   
    CLASS VARCHAR2(20));

INSERT INTO ITEM VALUES (100001,'F02','A01','THO','Melodies of Scotland Vol.1',2018,'Thomson G (ed)',0,'CD','Music');
INSERT INTO ITEM VALUES (100002,'F01','A02','ROB','Natural systems & human responses',2010,'Robert Prosser',14,'Book','Biology');
INSERT INTO ITEM VALUES (100003,'F01','A02','CAL','Restless Earth',2012,'Nigel Calder',14,'Book','Biology');
INSERT INTO ITEM VALUES (100004,'F02','A01','ADD','The organism and the environment',2007,'John Adds and others',14,'Book','Biology');
INSERT INTO ITEM VALUES (100005,'F02','A03','BIS','Home! Sweet home!',2013,'Bishop H R',3,'DVD','Music');
INSERT INTO ITEM VALUES (100006,'F02','A03','HAY','my mother bids me bind my hair',2000,'Haydn F J',3,'DVD','Music');
INSERT INTO ITEM VALUES (100007,'F03','A03','JIR','How to DIY A Whole Library Resource Table',2022,'Jirapat Boonmee',2,'Book','Computer Science');
INSERT INTO ITEM VALUES (100008,'F01','A02','GRO','How to Design the Most Advance Database for A Library',2020,'Group 40',2,'Book','Computer Science');
	
CREATE TABLE COPY     
    (RSC_ID NUMBER(6) NOT NULL,     
    COPY_NUMBER NUMBER(2));     
 
INSERT INTO COPY VALUES (100001,01);
INSERT INTO COPY VALUES (100001,02);
INSERT INTO COPY VALUES (100001,03);
INSERT INTO COPY VALUES (100001,04);
INSERT INTO COPY VALUES (100001,05);
INSERT INTO COPY VALUES (100002,01);
INSERT INTO COPY VALUES (100002,02);
INSERT INTO COPY VALUES (100002,03);
INSERT INTO COPY VALUES (100002,04);
INSERT INTO COPY VALUES (100002,05);
INSERT INTO COPY VALUES (100003,01);
INSERT INTO COPY VALUES (100003,02);
INSERT INTO COPY VALUES (100003,03);
INSERT INTO COPY VALUES (100003,04);
INSERT INTO COPY VALUES (100003,05);
INSERT INTO COPY VALUES (100004,01);
INSERT INTO COPY VALUES (100004,02);
INSERT INTO COPY VALUES (100004,03);
INSERT INTO COPY VALUES (100004,04);
INSERT INTO COPY VALUES (100004,05);
INSERT INTO COPY VALUES (100005,01);
INSERT INTO COPY VALUES (100005,02);
INSERT INTO COPY VALUES (100005,03);
INSERT INTO COPY VALUES (100005,04);
INSERT INTO COPY VALUES (100005,05);
INSERT INTO COPY VALUES (100006,01);
INSERT INTO COPY VALUES (100006,02);
INSERT INTO COPY VALUES (100006,03);
INSERT INTO COPY VALUES (100006,04);
INSERT INTO COPY VALUES (100006,05);
INSERT INTO COPY VALUES (100007,01);
INSERT INTO COPY VALUES (100007,02);
INSERT INTO COPY VALUES (100007,03);
INSERT INTO COPY VALUES (100007,04);
INSERT INTO COPY VALUES (100007,05);
INSERT INTO COPY VALUES (100008,01);
INSERT INTO COPY VALUES (100008,02);
INSERT INTO COPY VALUES (100008,03);
INSERT INTO COPY VALUES (100008,04);
INSERT INTO COPY VALUES (100008,05);

CREATE TABLE LOAN     
    (MEMBER_ID NUMBER(4),     
    RSC_ID NUMBER(6),
    COPY_NUMBER NUMBER(2),
    LOAN_DATE DATE);   
 
INSERT INTO LOAN VALUES (1001,100003,01,TO_DATE('27-NOV-2022','DD-MON-YYYY')); 
INSERT INTO LOAN VALUES (1002,100006,03,TO_DATE('15-NOV-2022','DD-MON-YYYY')); 
INSERT INTO LOAN VALUES (1002,100007,04,TO_DATE('30-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN VALUES (1003,100003,04,TO_DATE('16-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN VALUES (1004,100002,05,TO_DATE('30-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN VALUES (1005,100003,01,TO_DATE('10-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN VALUES (1001,100008,04,TO_DATE('20-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN VALUES (1002,100004,05,TO_DATE('09-NOV-2022','DD-MON-YYYY'));

CREATE TABLE LOAN_ARCHIVE   
    (MEMBER_ID NUMBER(4),   
    RSC_ID NUMBER(6),   
    RETURN_DATE DATE);   

INSERT INTO LOAN_ARCHIVE VALUES (1005,100004,TO_DATE('30-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN_ARCHIVE VALUES (1001,100004,TO_DATE('22-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN_ARCHIVE VALUES (1001,100005,TO_DATE('16-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN_ARCHIVE VALUES (1006,100007,TO_DATE('19-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN_ARCHIVE VALUES (1003,100004,TO_DATE('30-NOV-2022','DD-MON-YYYY'));
INSERT INTO LOAN_ARCHIVE VALUES (1008,100008,TO_DATE('30-NOV-2022','DD-MON-YYYY'));

CREATE TABLE RESERVATION        
    (MEMBER_ID NUMBER(4) NOT NULL,      
    RSC_ID NUMBER(6) NOT NULL,   
    NUMBER_OF_OFFERS NUMBER(2), 
    RESERVE_DATE DATE);
 
INSERT INTO RESERVATION VALUES (1002,100005, 0, TO_DATE('20-NOV-2022','DD-MON-YYYY')); 
INSERT INTO RESERVATION VALUES (1005,100007, 0, TO_DATE('22-NOV-2022','DD-MON-YYYY'));
INSERT INTO RESERVATION VALUES (1005,100003, 0, TO_DATE('24-NOV-2022','DD-MON-YYYY'));
INSERT INTO RESERVATION VALUES (1006,100007, 0, TO_DATE('25-NOV-2022','DD-MON-YYYY'));
INSERT INTO RESERVATION VALUES (1002,100008, 0, TO_DATE('27-NOV-2022','DD-MON-YYYY')); 
INSERT INTO RESERVATION VALUES (1004,100008, 0, TO_DATE('22-NOV-2022','DD-MON-YYYY'));

CREATE TABLE FINE
    (MEMBER_ID NUMBER(4) NOT NULL,
    RSC_ID NUMBER(6),
    PAID NUMBER(1) /*1 is Yes and 0 is No*/);

INSERT INTO FINE VALUES (1002,100006,0);
INSERT INTO FINE VALUES (1002,100007,0);
INSERT INTO FINE VALUES (1003,100003,0);
INSERT INTO FINE VALUES (1005,100003,0);
INSERT INTO FINE VALUES (1001,100008,0);
INSERT INTO FINE VALUES (1002,100004,0);
INSERT INTO FINE VALUES (1004,100005,1);
INSERT INTO FINE VALUES (1004,100006,1);

COMMIT;

/**************** Trigger Code ****************/

CREATE OR REPLACE TRIGGER INFORMLIBRARY  
BEFORE UPDATE ON LOAN
DECLARE
    TOTAL NUMBER(1);
    RSC_ID NUMBER(6);
    MEMBER_ID NUMBER(4);
BEGIN
    SELECT COUNT(RSC_ID) INTO TOTAL FROM LOAN WHERE MEMBER_ID = 100001; 
    IF (total > 5) THEN  
        raise_application_error (-20100, 
        'You have reached the maximum number your borrowed item'); 
    END IF;  
END;
/
CREATE OR REPLACE TRIGGER RESERVECANCEL
AFTER UPDATE ON RESERVATION
DECLARE
    NUMBER_OF_OFFERS NUMBER(2);
BEGIN
    DELETE
    FROM RESERVATION
    WHERE NUMBER_OF_OFFERS = 3;
END;

/******* View definitions code *******/

CREATE VIEW CATALOGUE AS
    SELECT RESOURCE_NAME, CREATOR, ITEM.CLASS, ITEM.TYPE, ITEM.YEAR
    FROM ITEM;

CREATE VIEW LOAN_INFORMATION (RESOURCE_NAME, DUE_DATE) AS
    SELECT RESOURCE_NAME,LOAN_DATE+DAYS_ALLOWED
    FROM ITEM, LOAN
    WHERE LOAN.MEMBER_ID = 1001 AND ITEM.RSC_ID = LOAN.RSC_ID;

CREATE VIEW RESERVATION_INFORMATION AS
    SELECT RESOURCE_NAME, RESERVE_DATE, NUMBER_OF_OFFERS
    FROM ITEM, RESERVATION
    WHERE RESERVATION.MEMBER_ID = 1001 AND RESERVATION.RSC_ID = ITEM.RSC_ID;
	
/************ Queries ************/

/* (1) Display resource which are biology books from the second floor which was created before the year 2000, sorted in ascending order */

SELECT RSC_ID, FLOOR, SHELF, RESOURCE_NAME, YEAR, CREATOR, TYPE, CLASS
FROM ITEM
WHERE YEAR >= 2000 AND TYPE = 'Book' AND CLASS = 'Biology'
ORDER BY YEAR ASC;

/* (2) Display members who do not currently hold any resource, sorted in ascending order */

SELECT MEMBER_ID, FIRSTNAME, LASTNAME, EMAIL, MEMBER_TYPE
FROM LIBRARY_MEMBER
WHERE MEMBER_ID NOT IN (SELECT MEMBER_ID FROM LOAN)
ORDER BY MEMBER_ID ASC;

/* (3) Display resources which are not currently on loan or reserved, sorted in ascending order */

SELECT RSC_ID, FLOOR, SHELF, RESOURCE_NAME, YEAR, CREATOR, TYPE, CLASS
FROM ITEM
WHERE RSC_ID NOT IN (SELECT RSC_ID FROM LOAN) AND RSC_ID NOT IN (SELECT RSC_ID FROM RESERVATION)
ORDER BY RSC_ID ASC;

/* (4) Display DVDs which are currently on loan */

SELECT RSC_ID, FLOOR, SHELF, RESOURCE_NAME, YEAR, CREATOR, TYPE, CLASS
FROM ITEM
WHERE TYPE = 'DVD' AND RSC_ID IN (SELECT RSC_ID FROM LOAN)
ORDER BY RSC_ID ASC;

SELECT RSC_ID, FLOOR, SHELF, RESOURCE_NAME, YEAR, CREATOR, TYPE, CLASS
FROM ITEM
WHERE TYPE = 'DVD' AND RSC_ID IN (SELECT RSC_ID FROM LOAN)
ORDER BY RSC_ID ASC;

/* (5) Display name and ID of all resources that are on loan by staff members in order by earliest loan date. */
SELECT LIBRARY_MEMBER.MEMBER_ID, LOAN.RSC_ID, RESOURCE_NAME, LOAN_DATE
FROM LOAN, ITEM, LIBRARY_MEMBER
WHERE LIBRARY_MEMBER.member_id = LOAN.member_id and LOAN.RSC_ID = ITEM.RSC_ID and member_type = 'Staff'
ORDER BY LOAN_DATE;

/* (6) Display all resources belonging to computer science classes where there is the word 'table' in the name of the item. */

SELECT RSC_ID, RESOURCE_NAME, CLASS
FROM ITEM
WHERE CLASS = 'Computer Science'
    and RESOURCE_NAME like '%Table%';
	
/* (7) Display loan information of members with overdue loans and who have not yet paid their fines. Include the fine amount to the nearest £GBP for each loan up to the current date (7/12/2022). */

SELECT *
FROM (SELECT LOAN.MEMBER_ID, LOAN.RSC_ID, LOAN_DATE,
    LOAN_DATE + DAYS_ALLOWED AS DUE_DATE,
    CURRENT_DATE,
    ROUND (CURRENT_DATE - (LOAN_DATE + DAYS_ALLOWED), 0) AS FINE
    FROM LOAN, ITEM
    WHERE LOAN.RSC_ID = ITEM.RSC_ID)
WHERE FINE > 0;

/* (8) Display a list of library members and the total fines they owe up until the current date (7/12/2022) and rounded to the nearest £GBP.  */

SELECT MEMBER_ID, SUM(FINE) AS TOTAL_FINE
FROM (SELECT LOAN.MEMBER_ID, LOAN.RSC_ID, LOAN_DATE,
    LOAN_DATE + DAYS_ALLOWED AS DUE_DATE,
    CURRENT_DATE,
    ROUND (CURRENT_DATE - (LOAN_DATE + DAYS_ALLOWED), 0) AS FINE
    FROM LOAN, ITEM
    WHERE LOAN.RSC_ID = ITEM.RSC_ID)
WHERE FINE > 0
GROUP BY MEMBER_ID;
